=================================
SSH Tunnel Status Plugin Tutorial
=================================

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 2
   :class: singlecol

*Estimated time to complete: ~20 minutes*

Introduction
------------

This tutorial walks through a |compass| plugin which displays the
hostname and status of the SSH tunnel through which the user is
connected to Compass. This plugin only displays when the user connects
to Compass through an SSH tunnel.

The SSH tunnel status is displayed in a
:ref:`header item <plugin-ref-header-items>` as highlighted in the
following image:

.. figure:: /images/compass/ssh-tunnel-status-example.png

.. include:: /includes/extracts/plugin-already-packaged-ssh-tunnel.rst

Prerequisites
-------------

.. include:: /includes/fact-plugins-prereqs.rst

Creating the Plugin
-------------------

.. include:: /includes/extracts/plugin-instantiate-ssh-tunnel-status.rst

When prompted, enter the following values:

.. list-table::
   :header-rows: 1
   :widths: 10 90

   * - Field
     - Description

   * - Name
     - .. code-block:: none

          ssh-tunnel-status

   * - Description
     - .. code-block:: none

          Displays the current status and port of the SSH tunnel
          through which the user is connected to Compass.

   * - Role
     - .. code-block:: none

          Header.Item

Finally, run the following command to install the plugin's
dependencies:

.. code-block:: sh

   cd ssh-tunnel-status && npm install

Creating the Store
~~~~~~~~~~~~~~~~~~

.. include:: /includes/fact-tutorial-create-store.rst

The SSH tunnel status plugin's store is called ``SshTunnelStatus``, and
it has the following state variables:

.. list-table::
   :widths: 10 60

   * - ``sshTunnel``
     - A boolean which is ``true`` if the user is connected to
       |compass| via an SSH tunnel, and ``false`` otherwise.

   * - ``sshTunnelHostname``
     - A string indicating the hostname of the SSH tunnel through which
       the user is connected.

   * - ``sshTunnelPort``
     - A string indicating the port number of the SSH tunnel through which
       the user is connected.

   * - ``sshTunnelHostPortString``
     - A string representing the concatenation of ``sshTunnelHostname``
       and ``sshTunnelPort`` in the following form:
       ``{sshTunnelHostname}:{sshTunnelPort}``

Implementing the Store
``````````````````````

Update ``src/stores/store.js`` to match the following:

.. literalinclude:: example-ssh-tunnel-status/store.js
   :language: js
   :linenos:

Creating the Component
~~~~~~~~~~~~~~~~~~~~~~

The SSH tunnel status plugin contains a
:ref:`component <plugins-components>`, which is a view which renders
based on the ``SshTunnelStatus`` store.

.. include:: /includes/fact-jsx-render.rst

Update ``src/components/ssh-tunnel-status/ssh-tunnel-status.jsx`` to match the following:

.. literalinclude:: example-ssh-tunnel-status/ssh-tunnel-status.jsx
   :language: js
   :linenos:

Styling the Component
~~~~~~~~~~~~~~~~~~~~~

The ``ssh-tunnel-status.jsx`` component imports its styles from the
``ssh-tunnel-status.less`` file.

Update ``src/components/ssh-tunnel-status/ssh-tunnel-status.less`` to
match the following:

.. literalinclude:: example-ssh-tunnel-status/ssh-tunnel-status.less
   :language: js
   :linenos:

.. include:: /includes/fact-plugin-styling.rst

Running the Plugin
------------------

.. include:: /includes/fact-compile-plugin.rst

.. seealso::

   - :doc:`Compass Plugin Reference </plugins/reference/>`
   - `ReactJS Documentation <https://reactjs.org>`__
   - `Redux Documentation <https://redux.js.org/>`__


