---
title: Open the individual connection fields view.
level: 4
ref: open-field-view
content: |
  To manually fill in individual connection fields, click
  :guilabel:`Fill in connection fields individually`:

  .. figure:: /images/compass/fill-connection-fields.png
     :figwidth: 690px

---
title: Enter your connection information.
ref: compass-enter-connection-info
content: |
  The :guilabel:`Hostname` dialog contains the following connection
  field options:

  .. list-table:: 
     :header-rows: 1
     :widths: 20 40

     * - Option
       - Description

     * - :guilabel:`Hostname`
       - Hostname of the machine where the deployment is
         running.
         
         If you are running your deployment locally, this value is
         ``localhost``. If you are connecting to an |service| cluster,
         you can get your hostname from your cluster detail view in
         |service|.

         If you are not sure of your hostname, contact your Database
         Administrator for information.

     * - :guilabel:`Port`
       - Port on which the deployment is running. Not required if
         you are using an :guilabel:`SRV Record` to connect to
         your MongoDB deployment.

         By default, a standalone deployment operates on port ``27017``.
         If you are connecting to a replica set, your port may also be
         ``27018`` or ``27019``. For more information on the default
         ports MongoDB operates on, see :manual:`Default MongoDB Port
         </reference/default-mongodb-port/>`.

         If you are not sure of the port where your deployment operates,
         contact your Database Administrator for information.

     * - :guilabel:`SRV Record`
       - Indicates whether the provided :guilabel:`Hostname`
         is an :manual:`SRV Record
         </reference/connection-string/#dns-seedlist-connection-format>`.
         If this toggle is enabled, you do not need to specify a port.

         .. note::

           You can only use SRV connection strings to connect to
           deployments running MongoDB 3.6 and later.

         SRV connection strings have a prefix of ``mongodb+srv:``. If
         you are using an SRV connection string, you do not need to
         include ``mongodb+srv`` in your :guilabel:`Hostname`.

         .. example::

             If the following is your SRV connection string for your
             MongoDB deployment:

             .. code-block:: shell
                 :copyable: false

                 mongodb+srv://<username>:<password>@gettingstarted-7q2cs.mongodb.net/test

             Then, in |compass-short|, you would specify your
             :guilabel:`Hostname` as:

             .. code-block:: shell
                 :copyable: false

                 gettingstarted-7q2cs.mongodb.net

     * - :guilabel:`Authentication`
       - Authentication to use if the deployment
         requires authentication. |service| clusters use
         :guilabel:`Username / Password` authentication.
         
         Select your authentication method from the tabs below for
         specific instructions:

         .. tabs::

           tabs:
             - id: username-pw
               name: Username / Password
               content: |
                 Select :guilabel:`Username / Password` if the
                 deployment uses either MongoDB-CR or
                 :manual:`SCRAM-SHA-1 </core/security-scram/>` as its
                 authentication mechanism.
                 
                 Provide the :guilabel:`Username`, :guilabel:`Password`,
                 and :manual:`Authentication Database
                 </core/security-users/#user-authentication-database>`
                 to authenticate the user.

                 .. note::

                    Starting in MongoDB version 4.0, MongoDB removes
                    support for the deprecated MongoDB
                    Challenge-Response (``MONGODB-CR``) authentication
                    mechanism.

             - id: scram-sha-256
               name: SCRAM-SHA-256
               content: |
                 Select :guilabel:`SCRAM-SHA-256` if the deployment uses
                 :manual:`SCRAM-SHA-256 </core/security-scram/>` as its
                 authentication mechanism (*New in MongoDB 4.0*). If
                 selected, you must provide the :guilabel:`Username`,
                 :guilabel:`Password`, and :manual:`Authentication
                 Database
                 </core/security-users/#user-authentication-database>`
                 to authenticate the user.

                 For more information on the ``SCRAM``
                 authentication mechanism, see :manual:`SCRAM
                 </manual/core/security-scram/>`.

             - id: kerberos
               name: Kerberos
               content: |

                 .. important::

                     :guilabel:`Kerberos` Authentication is not
                     available in Compass Community Edition.

                 Select :guilabel:`Kerberos` if the deployment uses
                 :manual:`Kerberos </core/kerberos/>` as
                 its authentication mechanism. If selected, you must
                 provide the
                 :manual:`Principal </core/kerberos/#principals>`,
                 :guilabel:`Password`, and :guilabel:`Service Name` to
                 authenticate the user.

                 You can also direct |compass| to
                 :guilabel:`Canonicalize the Host Name` by setting the
                 corresponding toggle. When you enable this setting,
                 Kerberos uses the canonicalized form of the
                 host name (``cname``) when constructing the principal
                 for |compass|.

                 For more information on principal name
                 canonicalization in Kerberos, see `this RFC document
                 <https://tools.ietf.org/html/rfc6806.html>`__.

             - id: ldap
               name: LDAP
               content: |
                 .. important::

                     :guilabel:`LDAP` Authentication is not available
                     in Compass Community Edition.

                 Select :guilabel:`LDAP` if the deployment
                 uses :manual:`LDAP </core/security-ldap-external/>`
                 as its authentication mechanism. If selected, you
                 must provide the :guilabel:`Username` and
                 :guilabel:`Password` to authenticate
                 the user.

             - id: x509
               name: X.509
               content: |
                 .. important::

                     :guilabel:`X.509` Authentication is not available
                     in Compass Community Edition.

                 Select :guilabel:`X.509` if the deployment uses
                 :manual:`X.509 </core/security-x.509/>` as its
                 authentication mechanism. If selected, you must
                 provide the  :guilabel:`Username` to authenticate
                 the user.

     * - :guilabel:`Favorite Name`
       - *Optional*. A name for the connection. To save the current
         connection entered as a
         :ref:`favorite connection <favorite-connections>`, enter a name
         in the input and click :guilabel:`Create Favorite`.

         .. tip::

            Although you can save multiple connections with the
            same :guilabel:`Favorite Name`, it is recommended to
            use unique names for each connection to easily find
            your saved connections.
---
title: "(Optional) Specify replica set and security connection options."
level: 4
ref: connect-additional-options
content: |
  The :guilabel:`More Options` connection screen allows you to specify
  the following connection options:

  .. list-table::
     :header-rows: 1

     * - Option
       - Description

     * - :guilabel:`Replica Set Name`
       - If your MongoDB deployment is a replica set, specify the
         replica set name. Not required if you specify your replica
         set :guilabel:`Hostname` as an :guilabel:`SRV Record`.

     * - :guilabel:`Read Preference`
       - Specifies how Compass directs read operations. Options are:

         - ``Primary``, 
         - ``Primary Preferred``, 
         - ``Secondary``,
         - ``Secondary Preferred``, and 
         - ``Nearest``.
         
         To learn more about read preferences, see
         :manual:`Read Preference </core/read-preference/>`.

  If you are connecting to your deployment using TLS/SSL or an SSH
  tunnel, refer to the following tabs for specific instructions:
  
  .. tabs::
     
     .. tab:: Connect Using TLS/SSL
        :tabid: ssl

        This option directs |compass-short| to connect to your
        MongoDB deployment via TLS/SSL. You can select one of the
        following SSL options:

        .. list-table::
           :header-rows: 1
           :widths: 10 40

           * - Option
             - Description
           
           * - :guilabel:`System CA/Atlas Deployment`
             - Connect to
               `MongoDB Atlas <https://www.mongodb.com/cloud/atlas?jmp=docs>`_.

           * - :guilabel:`Server Validation`
             - Compass validates the identity of the deployment. If
               selected, you must provide:

               .. list-table::
                  :widths: 35 65

                  * - :guilabel:`Certificate Authority`

                    - One or more certificate files from trusted
                      Certificate Authorities to validate the
                      certificate provided by the deployment.

           * - :guilabel:`Server and Client Validation`
             - The deployment performs certificate validation from its
               clients and Compass validates the identity of the
               deployment. If selected, you must provide:

               .. list-table::
                  :widths: 35 65

                  * - :guilabel:`Certificate Authority File`

                    - One or more certificate files from trusted
                      Certificate Authorities to validate the
                      certificate provided by the deployment.

                  * - :guilabel:`Client Certificate`

                    - A TLS/SSL certificate to present to
                      :binary:`~bin.mongod` to verify the identity of the
                      Compass client. Typical file extensions for the
                      certificate are ``.crt`` or ``.pem``.

                  * - :guilabel:`Client Private Key`

                    - A TLS/SSL key file to :binary:`~bin.mongod` to
                      verify the identity of the Compass client.
                      Typical file extensions for the private key are
                      ``.key`` or ``.pem``.

                  * - :guilabel:`Client Key Password`

                    - If the *Client Private Key* is protected with a
                      password/passphrase, you must provide the
                      password/passphrase.

           * - :guilabel:`Unvalidated (Insecure)`
             - Use TLS/SSL without any identity validation.

        .. tip::

           For production use, your MongoDB deployment should use valid
           certificates generated and signed by a single certificate
           authority. You or your organization can generate and
           maintain an independent certificate authority, or use
           certificates generated by a third-party TLS/SSL vendor.
  
     .. tab:: Connect Using SSH
        :tabid: ssh

        This option directs |compass-short| to connect to your
        MongoDB deployment via an SSH tunnel. The tunnel automatically
        starts when you connect to MongoDB and stops when you
        disconnect.

        In the :guilabel:`SSH Tunnel` dropdown, choose either a
        password or an identity file to provide authentication. Once
        you select your identification method, specify the following
        options:

        .. list-table::
           :widths: 10 40

           * - :guilabel:`SSH Hostname`

             - Enter the bastion (jumpbox) hostname. This is the
               unique identifier (Fully Qualified Domain Name, or
               FQDN) for the machine to be accessed.


           * - :guilabel:`SSH Tunnel Port`

             - Provide the port used for the SSH connection. This
               defaults to 22, the standard port for SSH.

           * - :guilabel:`SSH Username`

             - The username of the profile to log into on the remote
               system. This will be the user for which you want to
               establish the SSH connection.

           * - :guilabel:`SSH Identity File`

             - Select the file from which the identity (private key)
               for SSH public key authentication is read.

               Unix or OS X: If using OpenSSH, identity files are
               found in the :file:`~/.ssh` directory. By default,
               the private key files have one of the following file
               names:

               - ``id_dsa``
               - ``id_ecdsa``
               - ``id_ed25519``
               - ``id_rsa``

               On Windows, the location of the identify files
               depends on your choice of SSH client, such as PuTTY.

           * - :guilabel:`SSH Passphrase`

             - If your private key is encrypted, provide the
               passphrase used to decrypt your private key (stored
               in the specified identity file). A passphrase
               provides an extra layer of security for an SSH
               connection.

           * - :guilabel:`SSH Password`
             -  The password used to secure the SSH connection.
                This is required if you are not using an identity file.

        To use an SSH tunnel through a bastion host, the SSH
        configuration on the bastion host must allow TCP port
        forwarding; i.e., the ``AllowTcpForwarding`` directive in
        the :file:`/etc/ssh/sshd_config` file is set to ``yes``. If
        ``AllowTcpForwarding`` is not set to ``yes``, set to ``yes``
        and restart the SSH daemon (``sudo service sshd restart``).

        Instead of creating the SSH tunnel through the Compass UI, you can also create
        the tunnel manually from the command line:

        .. code-block:: sh

           ssh -L <local_port>:<mongodb_hostname>:<mongodb_port> \
              <user>@<bastion_hostname> -fN

        .. example::

           If you have a deployment running on
           ``hostname-a.com`` on port 27017, and the
           bastion host is ``hostname-b.com`` with user name
           ``ec2-user``, you can build the tunnel via

           .. code-block:: sh

              ssh -L 27000:hostname-a.com:27017 ec2-user@hostname-b.com -fN

           Using this SSH tunnel, you can now connect Compass (or
           the :binary:`~bin.mongo` shell) to ``localhost:27000`` to
           connect to the deployment running on
           ``hostname-a.com``.

        .. note::

           You cannot connect to a :term:`replica set` via an SSH
           tunnel. |compass-short| cannot establish a connection
           to multiple servers across the same SSH tunnel.
---
title: Connect.
level: 4
ref: compass-connect
content: |
   Click the :guilabel:`Connect` button to navigate to the
   |compass-short| :doc:`Home Page </instance>`.

   .. admonition:: Required Access
      :class: important

      Once you are connected to your MongoDB deployment, you may
      require specific :manual:`user roles <reference/built-in-roles/>`
      to access various |compass-short| features. For more information
      on the required roles for |compass-short| features, see
      :ref:`required-access`.
...
