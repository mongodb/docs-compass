.. _compass-indexes:

==============
Manage Indexes
==============

.. default-domain:: mongodb

.. contents:: On this page
   :local:
   :backlinks: none
   :depth: 1
   :class: singlecol

Indexes are special data structures that improve query performance.
Indexes store a portion of a collection's data in an easy-to-traverse 
form. The index stores the value of a specific field or set of fields, 
ordered by the value of the field.

To improve query performance, build indexes on fields that appear often 
in queries and for all operations that 
:ref:`sort by a field <query-bar-sort>`.

- Queries on an indexed field can use the index to limit the number of 
  documents that must be scanned to find matching documents.

- Sort operations on an indexed field can return documents pre-sorted 
  by the index.

To learn more about indexes, see :manual:`Indexes </indexes>`.

.. note:: Considerations

   Indexes have some negative performance impact on write operations. 
   For collections with high write-to-read ratio, indexes are expensive 
   since each insert must also update any indexes. For a detailed list 
   of considerations for indexes, see
   :manual:`Operational Considerations for Indexes <core/data-model-operations/#data-model-indexes>`.

.. _indexes-tab:

Indexes Tab
-----------

The :guilabel:`Indexes` tab lists the existing indexes for a collection.

To access the :guilabel:`Indexes` tab for a collection, click on the
collection on the left hand pane and select the :guilabel:`Indexes` tab.

.. figure:: /images/compass/indexes-view.png
  :figwidth: 816px

For each index, Compass displays the following information:

.. list-table::

   * - Name and Definition
     - The name of the index and keys.

   * - Type
     - Regular, text, geospatial or hashed index.

   * - Size
     - How large the index is.

   * - Usage
     - Number of times the index has been used since the time the index
       was created or the last server restart.

   * - Properties

     - Any special properties (such as uniqueness, partial) of the
       index.

.. _create-index:

Create an Index
---------------

To create an index on a collection via Compass, the collection must
contain documents.

.. include:: /includes/steps/create-index.rst

.. _compass-wildcard-index:

Wildcard Indexes
~~~~~~~~~~~~~~~~

.. versionadded:: v4.2

You can create :manual:`wildcard indexes </core/index-wildcard/>` to
support queries against unknown or arbitrary fields.

.. example::

   Consider a collection where documents contain a ``userMetadata``
   object. The fields within the ``userMetadata`` object may vary
   between documents.

   You can create a wildcard index on ``userMetadata`` to account for
   all potential fields within the object. In |compass-short|, enter
   the following for the index name:

   .. code-block:: javascript

      userMetadata.$**

   Specify a type (``ascending`` or ``descending``) for your wildcard
   index, then click :guilabel:`Create Index`.

   |compass-short| shows the type of your new index as
   :guilabel:`Wildcard`.

.. _drop-index:

Drop an Index
---------------

.. include:: /includes/steps/drop-index.rst

Limitations
-----------

- .. include:: /includes/extracts/readonly-not-permitted-indexes.rst

- The :guilabel:`Indexes` tab is not available if you are connected 
  to a :atlas:`Data Lake </data-lake>`. 
